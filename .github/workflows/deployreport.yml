name: Deploy to Ubuntu Server - Report

on:
  push:
    branches:
      - Report

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF_SSH'
            cd ~/BillBizz
            git checkout Report
            git pull

            # Remove old container if it exists
            if docker ps -a --format '{{.Names}}' | grep -q "^devbillreport$"; then
              docker rm -f devbillreport
            fi

            # Create Dockerfile
            echo 'FROM node:18' > Dockerfile
            echo 'WORKDIR /usr/src/app' >> Dockerfile
            echo 'COPY package*.json ./' >> Dockerfile
            echo 'RUN npm install' >> Dockerfile
            echo 'COPY . .' >> Dockerfile
            echo 'EXPOSE 5006' >> Dockerfile
            echo 'CMD ["node", "server.js"]' >> Dockerfile

            # Build and run the container
            docker build -t devbillreport .
            docker run -d --name devbillreport -p 5006:5006 devbillreport

            # Cleanup Dockerfile
            rm Dockerfile
          EOF_SSH
