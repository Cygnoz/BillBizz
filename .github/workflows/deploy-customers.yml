name: Deploy to Ubuntu Server - Customers

on:
  push:
    branches:
      - Customers

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF_SSH'
            cd ~/BillBizz
            git checkout Customers
            git pull

            # Remove old container if it exists
            if docker ps -a --format '{{.Names}}' | grep -q "^devbillcustomers$"; then
              docker rm -f devbillcustomers
            fi

            # Create Dockerfile
            cat <<EOF > Dockerfile
            # Use an official Node.js runtime as a parent image
            FROM node:22.11.0

            # Set the working directory inside the container
            WORKDIR /usr/src/app

            # Copy the package.json and package-lock.json files to the working directory
            COPY package*.json ./

            # Install the dependencies
            RUN npm install

            # Copy the rest of the application code to the working directory
            COPY . .

            # Expose the port the app runs on
            EXPOSE 5002

            # Define the command to run your application
            CMD ["node", "server.js"]
            EOF

            # Build and run the container
            docker build -t devbillcustomers .
            docker run -d --name devbillcustomers -p 5002:5002 devbillcustomers

            # Cleanup Dockerfile
            rm Dockerfile
          EOF_SSH
